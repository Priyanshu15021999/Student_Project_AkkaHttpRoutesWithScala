[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_351)
[debug]       Load.loadUnit: plugins took 772.2698ms
[debug]       Load.loadUnit: defsScala took 1.2531ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 392.7343 ms
[debug]           Load.resolveProject(global-plugins) took 378.6556ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 940.7319ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 1156.6466ms
[debug]       Load.loadUnit: cleanEvalClasses took 4.3238ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 2013.7163ms
[debug]   Load.apply: load took 7378.9749ms
[debug]   Load.apply: resolveProjects took 46.691ms
[debug]   Load.apply: finalTransforms took 340.2435ms
[debug]   Load.apply: config.delegates took 76.0916ms
[debug]   Load.apply: Def.make(settings)... took 3039.0193ms
[debug]   Load.apply: structureIndex took 539.1041ms
[debug]   Load.apply: mkStreams took 44.5671ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 25741.3091ms
[debug]           Load.loadUnit: plugins took 134.7525ms
[debug]           Load.loadUnit: defsScala took 0.0377ms
[debug] [Loading] Scanning directory D:\ScalaWithMongoDBRoutesProject\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaWithMongoDBRoutesProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.1902 ms
[debug]               Load.resolveProject(scalawithmongodbroutesproject-build) took 3.3521ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalawithmongodbroutesproject-build, base: D:\ScalaWithMongoDBRoutesProject\project, plugins: List(<none>))) took 10.0805ms
[debug] [Loading] Done in D:\ScalaWithMongoDBRoutesProject\project, returning: (scalawithmongodbroutesproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 18.1137ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0388ms
[debug]         Load.loadUnit(file:/D:/ScalaWithMongoDBRoutesProject/project/, ...) took 156.5566ms
[debug]       Load.apply: load took 160.1951ms
[debug]       Load.apply: resolveProjects took 0.5724ms
[debug]       Load.apply: finalTransforms took 43.6744ms
[debug]       Load.apply: config.delegates took 0.9033ms
[debug]       Load.apply: Def.make(settings)... took 474.7458ms
[debug]       Load.apply: structureIndex took 113.4125ms
[debug]       Load.apply: mkStreams took 0.006ms
[info] loading project definition from D:\ScalaWithMongoDBRoutesProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4650.16ms
[debug]     Load.loadUnit: defsScala took 0.0229ms
[debug] [Loading] Scanning directory D:\ScalaWithMongoDBRoutesProject
[debug]       Load.loadUnit: mkEval took 43.5182ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.2877 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 7.7692ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\ScalaWithMongoDBRoutesProject, plugins: List(<none>))) took 15.9091ms
[debug] [Loading] Done in D:\ScalaWithMongoDBRoutesProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1822.5895ms
[debug]     Load.loadUnit: cleanEvalClasses took 44.7825ms
[debug]   Load.loadUnit(file:/D:/ScalaWithMongoDBRoutesProject/, ...) took 6521.4147ms
[debug] Load.apply: load took 6551.3008ms
[debug] Load.apply: resolveProjects took 0.2828ms
[debug] Load.apply: finalTransforms took 52.9906ms
[debug] Load.apply: config.delegates took 0.7162ms
[debug] Load.apply: Def.make(settings)... took 507.9983ms
[debug] Load.apply: structureIndex took 122.8178ms
[debug] Load.apply: mkStreams took 0.0058ms
[info] set current project to ScalaWithMongoDBRoutesProject (in build file:/D:/ScalaWithMongoDBRoutesProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-f763a258babde1b45f9e
[debug] Writing bsp connection file
[info] started sbt server
